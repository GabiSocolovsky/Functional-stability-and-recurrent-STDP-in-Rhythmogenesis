%% Figure2a_Simulation.m
% This script generates **Figure 2a** from the paper:
% "Functional stability and recurrent STDP in rhythmogenesis"
%
% Description:
% Computes and plots the phase diagram of the neural network in the
% [J_EI, J_IE] plane, showing the oscillation frequency as a contour plot.
% Uses parfor loop for computing the frequency contour
%
% Dependencies:
% - FrequencyContourJeiJie.m 
%
% Authors: Gabi Socolovsky & Maoz Shamir
% Date: 2025-09-29
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% Network dynamics parameters %%%%%
dt=0.01; %% time bin
tf=200; %% final time for network dynamics
T=1; % typical time constant for network dynamics
Tunits=5*10^-3; % 5 msec is T=1
D=0.4; % time delay
Jee=0.6; % E-E order parameter synapse
Jii=0.4; % I-I order parameter synapse
Jhat=(Jee+Jii)/2;
%%% Parameters on the bifurcation line %%%
syms wD JbarD
if Jee>=Jii
range=[0.1 5 ;0.01 pi/(2*D)];
Y=vpasolve([(JbarD^2-Jee*Jii)^0.5==1/cos(wD*D-acos((Jee-Jii)/(2*(JbarD^2-Jee*Jii)^0.5))), T*wD==-tan(wD*D-acos((Jee-Jii)/(2*(JbarD^2-Jee*Jii)^0.5)))], [JbarD,wD],range); % the frequency on the bifurcation line
elseif Jee<Jii
    stop
range=[0.1 5 ;0.01 pi/(2*D)];    
Y=vpasolve([(JbarD^2-Jee*Jii)^0.5==1/cos(wD*D+atan2((JbarD^2-Jhat^2)^0.5,(Jee-Jii)/2)), T*wD==-tan(wD*D+atan2((JbarD^2-Jhat^2)^0.5,(Jee-Jii)/2))], [JbarD,wD],range); % the frequency on the bifurcation line
end    
wD=double(Y.wD); % angular frequency on bif. line
fD=wD/(2*pi); % frequency on bif. line 
JbarD=double(Y.JbarD); % Jbar on bif. line
phi=acos((Jee-Jii)/(2*(JbarD^2-Jee*Jii)^0.5)); % phi
psi=acos(Jhat/JbarD); % psi
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% The frequency contour part %%%%
Jei_arr=0:0.01:(1+Jii); % array of Jei
Jie_arr=0:0.02:20; % array of Jie
f=nan(length(Jei_arr),length(Jie_arr)); % create nan array of frequencies to a grid of Jei-Jie
parfor i=1:length(Jei_arr) 
    Jei=Jei_arr(i);
    f(i,:)=FrequencyContourJeiJie(JbarD,Jee,Jei,Jie_arr,Jii,dt,tf); 
end
f=f/(Tunits); % frequency in the Jei-Jie phase diagram, units in Hz
[JEI_arr,JIE_arr]=meshgrid(Jei_arr,Jie_arr);

[C,h]=contourf(JEI_arr,JIE_arr,f',100);
set(h,'LineColor','none')
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
grid on
hold on
Jei_init=0;
dJei=0.01;
Jei_final=1+Jii;
Jei_arr=Jei_init:dJei:Jei_final;
plot(Jei_arr,JbarD^2./Jei_arr,'Color','Black','LineWidth',3.5)
hold on
plot((1+Jii)*ones(1,length(0:20)),0:20,'Color','Black','LineWidth',3.5)
xlim([0 2])
ylim([0 20]) 
text(0.3,4,'$\mathrm{FP}$','interpreter','latex','FontSize',26)
text(0.95,13,'$\mathrm{R}$','interpreter','latex','FontSize',26)
text(1.65,10,'$\mathrm{OI}$','interpreter','latex','FontSize',26)
xlabel('$J_{EI}$','interpreter','latex','FontSize',18)
ylabel('$J_{IE}$','interpreter','latex','FontSize',18)
x=[0.25 0.315];
y=[0.5 0.59];
annotation('textarrow',x,y,'String','$J_{IE}=\frac{\bar{J}_d^2}{J_{EI}}$','interpreter','latex','FontSize',14)
set(gca,'FontSize',14)
set(gca,'TickLabelInterpreter','latex')